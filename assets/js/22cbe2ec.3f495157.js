"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[397],{30429:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>l,default:()=>g,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var t=n(74848),i=n(28453);const r={sidebar_position:1},l="Back end unit tests",a={id:"testing/backend-unit-testing",title:"Back end unit tests",description:"Overview",source:"@site/docs/testing/backend-unit-testing.md",sourceDirName:"testing",slug:"/testing/backend-unit-testing",permalink:"/project-ai-study-rpg-game/docs/testing/backend-unit-testing",draft:!1,unlisted:!1,editUrl:"https://github.com/capstone-projects-2024-fall/project-ai-study-rpg-game/edit/main/documentation/docs/testing/backend-unit-testing.md",tags:[],version:"current",lastUpdatedBy:"Lyss1303",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docsSidebar",previous:{title:"Test Procedures",permalink:"/project-ai-study-rpg-game/docs/category/test-procedures"},next:{title:"Front end unit tests",permalink:"/project-ai-study-rpg-game/docs/testing/frontend-unit-testing"}},d={},c=[{value:"Overview",id:"overview",level:3},{value:"Setup and Configuration",id:"setup-and-configuration",level:3},{value:"General Testing Guidelines",id:"general-testing-guidelines",level:3},{value:"Test Coverage",id:"test-coverage",level:2},{value:"Test Categories",id:"test-categories",level:2},{value:"1. <strong>User Management Tests</strong>",id:"1-user-management-tests",level:3},{value:"<strong>Signup Tests:</strong>",id:"signup-tests",level:4},{value:"<strong>Login Tests:</strong>",id:"login-tests",level:4},{value:"<strong>User Data Retrieval:</strong>",id:"user-data-retrieval",level:4},{value:"2. <strong>Task Management Tests</strong>",id:"2-task-management-tests",level:3},{value:"<strong>Task Deletion:</strong>",id:"task-deletion",level:4},{value:"<strong>Task Status Update:</strong>",id:"task-status-update",level:4},{value:"3. <strong>Player Management Tests</strong>",id:"3-player-management-tests",level:3},{value:"<strong>Gold Management:</strong>",id:"gold-management",level:4},{value:"<strong>Player Data Retrieval:</strong>",id:"player-data-retrieval",level:4},{value:"<strong>World State Management:</strong>",id:"world-state-management",level:4},{value:"4. <strong>Assignment Management Tests</strong>",id:"4-assignment-management-tests",level:3},{value:"<strong>Assignment Retrieval:</strong>",id:"assignment-retrieval",level:4},{value:"<strong>Unsubmitted Assignments:</strong>",id:"unsubmitted-assignments",level:4},{value:"5. <strong>Item Management Tests</strong>",id:"5-item-management-tests",level:3},{value:"<strong>Buying Items:</strong>",id:"buying-items",level:4},{value:"<strong>Retrieving Items:</strong>",id:"retrieving-items",level:4},{value:"6. <strong>Canvas Integration Tests</strong>",id:"6-canvas-integration-tests",level:3},{value:"<strong>Canvas Key Management:</strong>",id:"canvas-key-management",level:4},{value:"<strong>Fetching Assignments from Canvas:</strong>",id:"fetching-assignments-from-canvas",level:4},{value:"7. <strong>Course Management Tests</strong>",id:"7-course-management-tests",level:3},{value:"8. <strong>Error Handling and Edge Cases</strong>",id:"8-error-handling-and-edge-cases",level:3},{value:"Conclusion",id:"conclusion",level:2}];function o(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components},{Details:r}=s;return r||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h1,{id:"back-end-unit-tests",children:"Back end unit tests"}),"\n",(0,t.jsx)(s.h3,{id:"overview",children:"Overview"}),"\n",(0,t.jsx)(s.p,{children:"This section outlines the unit tests for backend functionalities to ensure API endpoints, services, and database operations are working as expected. The tests focus on the following areas:"}),"\n",(0,t.jsxs)(s.ol,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"API Endpoints:"})," Validating requests and responses."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Database Operations:"})," Ensuring CRUD operations execute correctly."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Service Logic:"})," Verifying that services handle business logic as expected."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Error Handling:"})," Testing that appropriate errors are returned for edge cases."]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"setup-and-configuration",children:"Setup and Configuration"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Testing Frameworks:"})," ",(0,t.jsx)(s.code,{children:"pytest"}),", ",(0,t.jsx)(s.code,{children:"unittest"})]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Database:"})," SQLite in-memory (",(0,t.jsx)(s.code,{children:":memory:"}),")"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Mocking Tools:"})," ",(0,t.jsx)(s.code,{children:"unittest.mock"}),", `pytest-mock"]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"general-testing-guidelines",children:"General Testing Guidelines"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Mocking External Services:"})," Use mocks for external API calls (e.g., Canvas API) to simulate responses."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Test Database:"})," Use an in-memory database (SQLite) to run tests without affecting production data."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Coverage Requirements:"})," Aim for 85%+ coverage of key backend functions."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Input Validation:"})," Verify that invalid inputs are properly handled with appropriate error responses."]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"test-coverage",children:"Test Coverage"}),"\n",(0,t.jsxs)(r,{children:[(0,t.jsx)("summary",{children:"Covarage Report"}),(0,t.jsx)(s.p,{children:(0,t.jsx)(s.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:n(67737).A+"",children:"View Coverage Report PDF"})})]}),"\n",(0,t.jsxs)(r,{children:[(0,t.jsx)("summary",{children:"Test Covarage"}),(0,t.jsx)(s.p,{children:(0,t.jsx)(s.img,{alt:"Alt Text",src:n(21180).A+"",width:"1758",height:"370"})})]}),"\n",(0,t.jsx)(s.h2,{id:"test-categories",children:"Test Categories"}),"\n",(0,t.jsxs)(s.h3,{id:"1-user-management-tests",children:["1. ",(0,t.jsx)(s.strong,{children:"User Management Tests"})]}),"\n",(0,t.jsx)(s.h4,{id:"signup-tests",children:(0,t.jsx)(s.strong,{children:"Signup Tests:"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"test_signup_success"}),": Verifies successful user registration."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"test_signup_existing_user"}),": Tests registration with an already existing user."]}),"\n"]}),"\n",(0,t.jsx)(s.h4,{id:"login-tests",children:(0,t.jsx)(s.strong,{children:"Login Tests:"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"test_login_success"}),": Verifies successful login."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"test_login_invalid_password"}),": Tests login with incorrect password."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"test_login_nonexistent_user"}),": Tests login for a non-existent user."]}),"\n"]}),"\n",(0,t.jsx)(s.h4,{id:"user-data-retrieval",children:(0,t.jsx)(s.strong,{children:"User Data Retrieval:"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"test_get_user_by_email"}),": Retrieves user details by email."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"test_get_user_not_found"}),": Checks response when the user is not found."]}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsxs)(s.h3,{id:"2-task-management-tests",children:["2. ",(0,t.jsx)(s.strong,{children:"Task Management Tests"})]}),"\n",(0,t.jsx)(s.h4,{id:"task-deletion",children:(0,t.jsx)(s.strong,{children:"Task Deletion:"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"test_delete_task_missing_task_id"}),": Verifies error when task ID is missing."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"test_delete_task_nonexistent"}),": Simulates deleting a non-existent task."]}),"\n"]}),"\n",(0,t.jsx)(s.h4,{id:"task-status-update",children:(0,t.jsx)(s.strong,{children:"Task Status Update:"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"test_update_task_status_success"}),": Updates task status successfully."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"test_update_task_status_missing_fields"}),": Tests missing fields for task updates."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"test_update_task_status_invalid_task_id"}),": Simulates invalid task ID input."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"test_update_task_status_invalid_email"}),": Tests update with invalid email."]}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsxs)(s.h3,{id:"3-player-management-tests",children:["3. ",(0,t.jsx)(s.strong,{children:"Player Management Tests"})]}),"\n",(0,t.jsx)(s.h4,{id:"gold-management",children:(0,t.jsx)(s.strong,{children:"Gold Management:"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"test_update_gold_success"}),": Successfully updates player gold."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"test_update_gold_insufficient_funds"}),": Tests insufficient funds handling."]}),"\n"]}),"\n",(0,t.jsx)(s.h4,{id:"player-data-retrieval",children:(0,t.jsx)(s.strong,{children:"Player Data Retrieval:"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"test_get_player_data_success"}),": Retrieves player data successfully."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"test_get_player_data_missing_email"}),": Verifies missing email error."]}),"\n"]}),"\n",(0,t.jsx)(s.h4,{id:"world-state-management",children:(0,t.jsx)(s.strong,{children:"World State Management:"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"test_update_player_world_state"}),": Updates player world state."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"test_update_player_world_state_missing_email"}),": Tests missing email for world state update."]}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsxs)(s.h3,{id:"4-assignment-management-tests",children:["4. ",(0,t.jsx)(s.strong,{children:"Assignment Management Tests"})]}),"\n",(0,t.jsx)(s.h4,{id:"assignment-retrieval",children:(0,t.jsx)(s.strong,{children:"Assignment Retrieval:"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"test_get_assignments_missing_email"}),": Checks missing email handling."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"test_get_assignments_user_not_found"}),": Tests response for nonexistent user."]}),"\n"]}),"\n",(0,t.jsx)(s.h4,{id:"unsubmitted-assignments",children:(0,t.jsx)(s.strong,{children:"Unsubmitted Assignments:"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"test_get_Unsubmitted_assignments_missing_email"}),": Checks missing email error."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"test_get_unsubmitted_assignments_user_not_found"}),": Simulates a user not found scenario."]}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsxs)(s.h3,{id:"5-item-management-tests",children:["5. ",(0,t.jsx)(s.strong,{children:"Item Management Tests"})]}),"\n",(0,t.jsx)(s.h4,{id:"buying-items",children:(0,t.jsx)(s.strong,{children:"Buying Items:"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"test_buy_items_success"}),": Tests successful item purchase."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"test_buy_items_missing_data"}),": Verifies missing purchase data."]}),"\n"]}),"\n",(0,t.jsx)(s.h4,{id:"retrieving-items",children:(0,t.jsx)(s.strong,{children:"Retrieving Items:"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"test_get_user_items_success"}),": Retrieves items successfully."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"test_get_user_items_not_found"}),": Tests no items found scenario."]}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsxs)(s.h3,{id:"6-canvas-integration-tests",children:["6. ",(0,t.jsx)(s.strong,{children:"Canvas Integration Tests"})]}),"\n",(0,t.jsx)(s.h4,{id:"canvas-key-management",children:(0,t.jsx)(s.strong,{children:"Canvas Key Management:"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"test_log_canvas_key_success"}),": Tests successful Canvas key submission."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"test_log_canvas_key_invalid"}),": Tests invalid Canvas key."]}),"\n"]}),"\n",(0,t.jsx)(s.h4,{id:"fetching-assignments-from-canvas",children:(0,t.jsx)(s.strong,{children:"Fetching Assignments from Canvas:"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"test_get_all_assignments_form_Canvas_api_failure"}),": Simulates Canvas API failure."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"test_get_all_assignments_from_Canvas_success"}),": Tests successful assignment fetch."]}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsxs)(s.h3,{id:"7-course-management-tests",children:["7. ",(0,t.jsx)(s.strong,{children:"Course Management Tests"})]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"test_get_courses_success"}),": Successfully fetches courses."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"test_get_courses_not_found"}),": Tests no courses found scenario."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"test_fetch_courses_invalid_email"}),": Checks invalid email handling."]}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsxs)(s.h3,{id:"8-error-handling-and-edge-cases",children:["8. ",(0,t.jsx)(s.strong,{children:"Error Handling and Edge Cases"})]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"test_invalid_endpoint"}),": Tests accessing an invalid endpoint."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"test_missing_email_on_buy_items"}),": Verifies email requirement for buying items."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"test_update_player_gold_negative_amount"}),": Simulates negative gold update."]}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,t.jsx)(s.p,{children:"This test suite comprehensively covers expected functionality, input validation, and integration behavior for the Flask-based application. It ensures system reliability, stability, and proper error handling across various endpoints.\nFor each method, one or more test cases."})]})}function g(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},67737:(e,s,n)=>{n.d(s,{A:()=>t});const t=n.p+"assets/files/Coverage-report-070ddd5de297f5f3e06eaf049751302e.pdf"},21180:(e,s,n)=>{n.d(s,{A:()=>t});const t=n.p+"assets/images/backend-test-coverage-7eb1f1092f8231fe0b7dcb79f89a0a41.png"},28453:(e,s,n)=>{n.d(s,{R:()=>l,x:()=>a});var t=n(96540);const i={},r=t.createContext(i);function l(e){const s=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),t.createElement(r.Provider,{value:s},e.children)}}}]);