"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[397],{30429:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var s=n(74848),i=n(28453);const r={sidebar_position:1},o="Backend unit tests",a={id:"testing/backend-unit-testing",title:"Backend unit tests",description:"Overview",source:"@site/docs/testing/backend-unit-testing.md",sourceDirName:"testing",slug:"/testing/backend-unit-testing",permalink:"/project-ai-study-rpg-game/docs/testing/backend-unit-testing",draft:!1,unlisted:!1,editUrl:"https://github.com/capstone-projects-2024-fall/project-ai-study-rpg-game/edit/main/documentation/docs/testing/backend-unit-testing.md",tags:[],version:"current",lastUpdatedBy:"IskraLlupa25",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docsSidebar",previous:{title:"Test Procedures",permalink:"/project-ai-study-rpg-game/docs/category/test-procedures"},next:{title:"Frontend unit tests",permalink:"/project-ai-study-rpg-game/docs/testing/frontend-unit-testing"}},c={},d=[{value:"Overview",id:"overview",level:3},{value:"General Testing Guidelines",id:"general-testing-guidelines",level:3}];function l(e){const t={h1:"h1",h3:"h3",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"backend-unit-tests",children:"Backend unit tests"}),"\n",(0,s.jsx)(t.h3,{id:"overview",children:"Overview"}),"\n",(0,s.jsx)(t.p,{children:"This section outlines the unit tests for backend functionalities to ensure API endpoints, services, and database operations are working as expected. The tests focus on the following areas:"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"API Endpoints:"})," Validating requests and responses."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Database Operations:"})," Ensuring CRUD operations execute correctly."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Service Logic:"})," Verifying that services handle business logic as expected."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Error Handling:"})," Testing that appropriate errors are returned for edge cases."]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"general-testing-guidelines",children:"General Testing Guidelines"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Mocking External Services:"})," Use mocks for external API calls (e.g., Canvas API) to simulate responses."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Test Database:"})," Use an in-memory database (SQLite) to run tests without affecting production data."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Coverage Requirements:"})," Aim for 90%+ coverage of key backend functions."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Input Validation:"})," Verify that invalid inputs are properly handled with appropriate error responses."]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"For each method, one or more test cases."}),"\n",(0,s.jsx)(t.p,{children:"A test case consists of input parameter values and expected results."}),"\n",(0,s.jsx)(t.p,{children:"All external classes should be stubbed using mock objects."})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var s=n(96540);const i={},r=s.createContext(i);function o(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);