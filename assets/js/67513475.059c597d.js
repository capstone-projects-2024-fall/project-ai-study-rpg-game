"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[465],{18607:e=>{e.exports=JSON.parse('{"url":"redocusaurus/using-single-yaml.yaml","themeId":"theme-redoc","isSpecFile":true,"spec":{"openapi":"3.0.0","info":{"title":"CanvasQuest API Specification","version":"1.0.0"},"paths":{"/signup":{"post":{"summary":"Register a new user.","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string"},"lastName":{"type":"string"},"nickname":{"type":"string"},"email":{"type":"string"},"password":{"type":"string"},"canvasKey":{"type":"string"},"selectedMotto":{"type":"string"}}}}}},"responses":{"201":{"description":"User registered successfully."},"400":{"description":"User already exists."}}}},"/login":{"post":{"summary":"User login.","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"email":{"type":"string"},"password":{"type":"string"}}}}}},"responses":{"200":{"description":"Login successful."},"401":{"description":"Invalid password."},"404":{"description":"Account does not exist."}}}},"/account-age":{"get":{"summary":"Get account age in years, months, and days.","parameters":[{"name":"email","in":"query","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Account age details.","content":{"application/json":{"schema":{"type":"object","properties":{"years":{"type":"integer"},"months":{"type":"integer"},"days":{"type":"integer"}}}}}},"400":{"description":"Email is required."},"404":{"description":"User not found."}}}},"/api/user":{"get":{"summary":"Get user data by email.","parameters":[{"name":"email","in":"query","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"User data.","content":{"application/json":{"schema":{"type":"object"}}}},"400":{"description":"Email is required."},"404":{"description":"User not found."}}}},"/canvasKey":{"post":{"summary":"Log and validate Canvas API key.","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"email":{"type":"string"},"canvasKey":{"type":"string"}}}}}},"responses":{"200":{"description":"Canvas key validated and stored."},"400":{"description":"Invalid Canvas key or missing email."},"500":{"description":"Error validating Canvas key."}}}},"/generate_steps":{"post":{"summary":"Get AI-Generated assignment steps from ChatGPT API.","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"assignment_id":{"type":"integer"}}}}}},"responses":{"200":{"description":"Generated steps.","content":{"application/json":{"schema":{"type":"object","properties":{"steps":{"type":"string"}}}}}},"404":{"description":"Assignment not found."},"500":{"description":"Internal server error."}}}},"/api/updateTaskStatus":{"post":{"summary":"Update the status of a task.","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"taskId":{"type":"integer"},"status":{"type":"string"},"email":{"type":"string"}}}}}},"responses":{"200":{"description":"Task status updated successfully."},"400":{"description":"Missing task ID or status."}}}},"/getUnsubmittedAssignmentsFromDb":{"get":{"summary":"Get unsubmitted assignments for a user.","parameters":[{"name":"email","in":"query","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Unsubmitted assignments retrieved.","content":{"application/json":{"schema":{"type":"object"}}}},"400":{"description":"Email is required."},"404":{"description":"User or assignments not found."}}}},"/getAllAssignmentsFromDb":{"get":{"summary":"Get all assignments for a user.","parameters":[{"name":"email","in":"query","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Assignments retrieved successfully.","content":{"application/json":{"schema":{"type":"object"}}}},"400":{"description":"Email is required."},"404":{"description":"User or assignments not found."}}}},"/coursesFromDb":{"get":{"summary":"Get courses for a user.","parameters":[{"name":"email","in":"query","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Courses retrieved successfully.","content":{"application/json":{"schema":{"type":"object"}}}},"400":{"description":"Email is required."},"404":{"description":"User or courses not found."}}}},"/getCourseAndAssignmentsInfoFromCanvas":{"post":{"summary":"Retrieve course and assignment information from Canvas API.","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"canvasKey":{"type":"string"}}}}}},"responses":{"200":{"description":"Data retrieved and stored successfully."},"400":{"description":"Invalid Canvas API token or error occurred."}}}},"/api/deleteTask":{"post":{"summary":"Delete a task from the database.","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"taskId":{"type":"integer"}}}}}},"responses":{"200":{"description":"Task deleted successfully."},"400":{"description":"Task ID is required."}}}},"/api/updatePlayerGold":{"post":{"summary":"Update player gold.","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"email":{"type":"string"},"amount":{"type":"integer"}}}}}},"responses":{"200":{"description":"Gold amount updated successfully."},"400":{"description":"Insufficient gold or invalid input."}}}},"/api/getPlayerData":{"get":{"summary":"Get player gold and world state.","parameters":[{"name":"email","in":"query","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Player data retrieved successfully.","content":{"application/json":{"schema":{"type":"object","properties":{"gold":{"type":"integer"},"worldState":{"type":"integer"}}}}}},"400":{"description":"Email is required or user does not exist."}}}},"/api/updatePlayerWorldState":{"post":{"summary":"Update player world state.","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"email":{"type":"string"},"worldState":{"type":"integer"}}}}}},"responses":{"200":{"description":"World state updated successfully."},"400":{"description":"Email is required or invalid input."}}}},"/api/buyItems":{"post":{"summary":"Buy items and add to inventory.","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"email":{"type":"string"},"items":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"description":{"type":"string"},"price":{"type":"integer"}}}}}}}}},"responses":{"200":{"description":"Items successfully purchased and added to inventory."},"400":{"description":"Email and items are required."},"500":{"description":"Error inserting items into database."}}}},"/api/getUserItems":{"get":{"summary":"Get user items from inventory.","parameters":[{"name":"email","in":"query","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Items retrieved successfully.","content":{"application/json":{"schema":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"description":{"type":"string"},"price":{"type":"integer"}}}}}}},"400":{"description":"Email is required."}}}}},"components":{"schemas":{"User":{"type":"object","properties":{"name":{"type":"string"},"lastName":{"type":"string"},"nickname":{"type":"string"},"email":{"type":"string"},"password":{"type":"string"},"canvasKey":{"type":"string"},"selectedMotto":{"type":"string"}}}}}}}')}}]);